[buildout]
extends = http://dist.plone.org/release/4.3-latest/versions.cfg
parts =
    sphinx-build
    robot
    pybot
    pybabel
    i18ndude
versions = versions
develop = .
extensions = mr.developer
sources = sources
sources-dir = extras
auto-checkout =

[sources]
plone.app.robotframework = git git://github.com/plone/plone.app.robotframework
robotframework-selenium2screenshots = git git://github.com/datakurre/robotframework-selenium2screenshots
sphinxcontrib-robotframework = git git://github.com/datakurre/sphinxcontrib_robotframework

[versions]
Sphinx =
selenium =
robotsuite =
robotframework =
robotframework-selenium2library =
sphinxcontrib-robotframework =

[sphinx-build]
recipe = zc.recipe.egg
eggs =
    Sphinx
    collective.usermanual
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates standalone setup, which bootstraps Plone within Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'source')
    shutil.copy(join(path, 'robot-standalone.rst'), join(path, 'robot.rst'))
scripts =
    sphinx-build=sphinx-build

[robot]
recipe = zc.recipe.egg
eggs =
    Sphinx
    collective.usermanual
    plone.app.robotframework
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates robot-server, which uses robot-server Plone with Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'source')
    shutil.copy(join(path, 'robot-server.rst'), join(path, 'robot.rst'))
scripts =
    robot-server
    pybot=robot
    sphinx-build=robot-sphinx

[pybot]
recipe = zc.recipe.egg
eggs =
    collective.usermanual
    plone.app.robotframework
scripts =
    pybot
    pybabel

[pybabel]
recipe = zc.recipe.egg
eggs = plone.app.robotframework
scripts = pybabel

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude
